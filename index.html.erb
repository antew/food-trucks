<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Food Truck Schedules</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="icon" href="favicon.ico" />
    <link rel="stylesheet" href="water.css">
    <style>
      .filters {
        display: none;
      }
      body.js .filters {
        display: flex;
        flex-direction: column;
      }
    </style>
    <script></script>
  </head>
  <body>
    <div class="filters">
      <input type="text" id="searchBox" onkeyup="filterTables()" placeholder="Search...">
      <label>
        <input type="checkbox" id="showAllDates" onChange="showAllDates(this)">
        Show all dates
      </label>
    </div>

    <% schedules.each do |schedule| %> 
      <h3><%= schedule[:location] %></h3>
      <table class="schedule-table">
        <thead>
          <tr>
            <th>Date</th>
            <th>Food Truck</th>
            <th>Hours</th>
          </tr>
        </thead>
        <tbody>
          <% schedule[:calendar].each do |item| %>
            <tr data-dt="<%= item[:date] %>T08:00">
              <td class="dt"><%= item[:date] %></td>
              <td><%= item[:truck] %></td>
              <td><%= item[:time] %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    <% end %>
    <script>
      document.body.classList.add("js");

      function filterBy(shouldShow) {
        const tables = document.getElementsByClassName("schedule-table");
        for (let t = 0; t < tables.length; t++) {
          let tr = tables[t].getElementsByTagName("tr");
          for (let i = 1; i < tr.length; i++) {
            tr[i].style.display = shouldShow(tr[i]) ? "" : "none";
          }
        }
      }

      function filterTables() {
        let input = document.getElementById("searchBox");
        filter = input.value.toUpperCase();

        filterBy((tr) => {
          txtValue = tr.textContent || tr.innerText;
          return txtValue.toUpperCase().indexOf(filter) > -1;
        });
      }

      function showAllDates(element) {
        let inSevenDays = new Date();
        inSevenDays.setHours(0, 0, 0, 0);
        inSevenDays.setDate(inSevenDays.getDate() + 7);
        const startOfToday = new Date();
        startOfToday.setHours(0, 0, 0, 0);


        filterBy((tr) => {
          if (element.checked) return true;

          var dateString = tr.getAttribute("data-dt");
          var date = new Date(dateString);
          console.log("Start", startOfToday, "Date", date, "Truck", tr.textContent)

          return date <= inSevenDays && date >= startOfToday
        });
      }

      document.addEventListener('DOMContentLoaded', () => {
        showAllDates(document.getElementById("showAllDates"))
      })
    </script>
  </body>
</html>
